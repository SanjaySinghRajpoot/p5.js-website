{
    "Home": "दीक्षा",
    "Download": "डाउनलोड",
    "Start": "प्रारंभ",
    "Reference": "संदर्भ",
    "reference-tagline": "प्रसंस्करण की अंतर्ज्ञान एक्स की शक्ति",
    "reference-search": "एपीआई खोजें",
    "reference-menu-home": "दीक्षा",
    "reference-menu-download": "डाउनलोड",
    "reference-menu-get-started": "प्रारंभ",
    "reference-menu-reference": "संदर्भ",
    "reference-menu-libraries": "पुस्तकालयों",
    "reference-menu-learn": "सीखने के लिए",
    "reference-menu-examples": "उदाहरण",
    "reference-menu-books": "किताबें",
    "reference-menu-community": "समुदाय",
    "reference-menu-forum": "मंच",
    "reference-description1": "आप जो खोज रहे हैं वह नहीं मिल रहा है? शायद आपको अंदर जांचना चाहिए",
    "reference-description2": "या",
    "reference-description3": "आप संदर्भ का एक संस्करण डाउनलोड कर सकते हैं",
    "reference-description4": "यहां",
    "reference-contribute1": "यदि आप कोई त्रुटि देखते हैं या कोई सुझाव है",
    "reference-contribute2": "कृपया हमें बताएं",
    "reference-error1": "क्या आपको कोई गलती मिली?",
    "reference-error2": "में प्रलेखित और परिभाषित किया गया है",
    "reference-error3": "कृपया बेझिझक करें",
    "reference-error4": "फ़ाइल संपादित करें",
    "reference-error5": "और पुल अनुरोध का संकेत देते हैं।",
    "reference-example": "उदाहरण",
    "reference-description": "विवरण",
    "reference-extends": "फैली",
    "reference-parameters": "मापदंडों",
    "reference-syntax": "वाक्य-विन्यास",
    "reference-returns": "रिटर्न",
    "footer1": "p5.js द्वारा बनाया गया था",
    "footer2": "और सहयोगियों के एक समुदाय द्वारा समर्थन से विकसित किया गया है",
    "footer3": "और",
    "footer4": "द्वारा पहचान और ग्राफिक डिजाइन",
    "Libraries": "पुस्तकालयों",
    "Learn": "सीखने के लिए",
    "Examples": "उदाहरण",
    "Books": "किताबें",
    "Community": "समुदाय",
    "Contribute": "योगदान",
    "Forum": "मंच",
    "h1": "संदर्भ",
    "Color": "रंग",
    "Shape": "आकार",
    "Creating & Reading": "सृजन और पढ़ना",
    "Setting": "विन्यास",
    "2D Primitives": "2D आदिम",
    "Attributes": "गुण",
    "Curves": "घटता",
    "Vertex": "कोने",
    "3D Models": "3 डी मॉडल",
    "3D Primitives": "3 डी प्रिमिटिव",
    "Constants": "स्थिरांक",
    "Structure": "संरचना",
    "Environment": "वातावरण",
    "DOM": "डोम",
    "Rendering": "प्रस्तुत करना",
    "Transform": "परिवर्तन",
    "Data": "डेटा",
    "Dictionary": "शब्दकोश",
    "Array Functions": "सरणी कार्य करता है",
    "Conversion": "रूपांतरण",
    "String Functions": "स्ट्रिंग फ़ंक्शंस",
    "Events": "घटनाक्रम",
    "Acceleration": "त्वरण",
    "Keyboard": "कीबोर्ड",
    "Mouse": "माउस",
    "Touch": "स्पर्श",
    "Image": "चित्र",
    "Loading & Displaying": "लोड और दिखाएँ",
    "Pixels": "पिक्सल",
    "IO": "प्रवेश और निकास",
    "Input": "प्रविष्टि",
    "Output": "उत्पादन",
    "Table": "तालिका",
    "Time & Date": "समय और दिनांक",
    "XML": "एक्सएमएल",
    "Math": "गणित",
    "Calculation": "गणना",
    "Noise": "शोर",
    "Trigonometry": "त्रिकोणमिति",
    "Typography": "टाइपोग्राफी",
    "Font": "स्रोत",
    "Lights, Camera": "रोशनी, कैमरा",
    "Camera": "कैमरा",
    "Lights": "दीपक",
    "Material": "सामग्री",
    "p5": {
		"alpha":{
			"description":"एक रंग या पिक्सेल की एक सरणी के अल्फा मूल्य निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"blue":{
			"description":"एक रंग या पिक्सेल की एक सरणी से नीले रंग का मान निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"brightness":{
			"description":"एक रंग या पिक्सेल की एक सरणी का एचएसबी चमक मूल्य निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"color":{
			"description":[
                "रंग डेटाटाइप के चरों में भंडारण के लिए रंग बनाता है। पैरामीटर को वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a> के आधार पर RGB या HSB मानों के रूप में व्याख्यायित किया जाता है। डिफ़ॉल्ट मोड आरजीबी मान 0 से 255 तक है और इसलिए, फ़ंक्शन कॉल रंग (255, 204, 0) एक चमकदार पीला रंग लौटाएगा।",
                "ध्यान दें कि यदि <a href=\"#/p5/color\">color()</a> को केवल एक मान प्रदान किया जाता है, तो इसे ग्रेस्केल मान के रूप में समझा जाएगा। दूसरा मान जोड़ें, और यह होगा अल्फा पारदर्शिता के लिए उपयोग किया जाता है। जब तीन मान निर्दिष्ट किए जाते हैं, तो उन्हें आरजीबी या एचएसबी मान के रूप में व्याख्या किया जाता है। चौथा मान जोड़ने से अल्फा पारदर्शिता लागू होती है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग स्ट्रिंग और सभी नामित रंग स्ट्रिंग समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।"
              ],
			"params":[
				"संख्या | स्ट्रिंग: संख्या जो काले और सफेद के बीच मूल्य को निर्दिष्ट करती है।",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष अल्फा मान (डिफ़ॉल्ट 0-100 है)",
				"नंबर | स्ट्रिंग: वर्तमान रंग रेंज या एक रंग स्ट्रिंग के सापेक्ष लाल या डाई का मूल्य",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष हरे या संतृप्ति मूल्य",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष नीले या चमक का मूल्य"
			],
			"returns":"फिक्स: परिणामस्वरूप रंग"
		},
		"green":{
			"description":"एक रंग या पिक्सेल की एक सरणी का हरा मान निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"hue":{
			"description":[
                "रंग या पिक्सेल सरणी से रंग मान निकालता है।",
                "ह्यू एचएसबी और एचएसएल दोनों में मौजूद है। एचएसबी रंग ऑब्जेक्ट के साथ आपूर्ति किए जाने पर यह फ़ंक्शन एचएसबी-सामान्यीकृत रंग लौटाएगा (या जब रंग मोड एचएसबी होने पर पिक्सेल सरणी के साथ आपूर्ति की जाती है), लेकिन एचएसएल-सामान्यीकृत रंग के लिए डिफ़ॉल्ट होगा अन्यथा। (मान केवल तभी भिन्न होंगे जब प्रत्येक सिस्टम के लिए अधिकतम ह्यू सेटिंग अलग हो।)"
              ],
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"lerpColor":{
			"description":[
                "दो रंगों को मिलाता है उनके बीच कहीं तीसरा रंग खोजने के लिए। एएमटी पैरामीटर दो मानों के बीच इंटरपोलेट करने की मात्रा है जहां 0.0 पहले रंग के बराबर है, 0.1 पहले रंग के बहुत करीब है, 0.5 बीच में आधा है, आदि। एक 0 से नीचे की राशि को 0 माना जाएगा। इसी तरह, 1 से ऊपर की राशि को 1 पर सीमित कर दिया जाएगा। यह <a href=\"#/p5/lerp\">lerp()</a> के व्यवहार से अलग है, लेकिन आवश्यक है क्योंकि अन्यथा सीमा के बाहर की संख्याएँ अजीब और अप्रत्याशित रंग उत्पन्न करेंगी।",
                "जिस तरह से रंगों को प्रक्षेपित किया जाता है वह वर्तमान रंग मोड पर निर्भर करता है।"
              ],
			"params":[
				"व्यवस्था / संख्या: इस रंग से प्रक्षेपित करें",
				"व्यवस्था / संख्या: इस रंग को प्रक्षेपित करें",
				"संख्या: 0 और 1 के बीच की संख्या"
			],
			"returns":"व्यवस्था / संख्या: प्रक्षेपित रंग"
		},
		"lightness":{
			"description":"एक रंग या पिक्सेल की एक सरणी के एचएसएल चमक मूल्य निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"red":{
			"description":"एक रंग या पिक्सेल की एक सरणी से लाल का मान निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
        },
        "saturation": {
            "description": [
                "रंग या पिक्सेल सरणी से संतृप्ति मान निकालता है।",
                "संतृप्ति को एचएसबी और एचएसएल में अलग-अलग स्केल किया जाता है। यह फ़ंक्शन एचएसबी रंग ऑब्जेक्ट के साथ आपूर्ति किए जाने पर एचएसबी संतृप्ति लौटाएगा (या जब रंग मोड एचएसबी है, तो पिक्सेल सरणी के साथ आपूर्ति की जाती है), लेकिन अन्यथा एचएसएल संतृप्ति में डिफ़ॉल्ट होगा।"
              ],
            "params": [
                "ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "background": {
            "description": [
                "<a href=\"#/p5/background\">background()</a> फ़ंक्शन p5.js कैनवास की पृष्ठभूमि के लिए उपयोग किए गए रंग को सेट करता है। डिफ़ॉल्ट पृष्ठभूमि पारदर्शी होती है। यह फ़ंक्शन आमतौर पर अंदर उपयोग किया जाता है <a href=\"#/p5/draw\">draw()</a> प्रत्येक फ्रेम की शुरुआत में डिस्प्ले विंडो को साफ करने के लिए, लेकिन इसका उपयोग <a href=\"#/p5/setup\">सेटअप ()</a> एनिमेशन के पहले फ्रेम पर बैकग्राउंड सेट करने के लिए या अगर बैकग्राउंड को सिर्फ एक बार सेट करने की जरूरत है।",
                "रंग या तो आरजीबी, एचएसबी, या एचएसएल रंग के संदर्भ में निर्दिष्ट किया गया है जो वर्तमान <a href=\"#/p5/colorMode\">colorMode</a> पर निर्भर करता है। (डिफ़ॉल्ट रंग स्थान RGB है, जिसमें 0 से 255 तक की सीमा में प्रत्येक मान)। डिफ़ॉल्ट रूप से अल्फा श्रेणी भी 0 से 255 तक होती है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "एक <a href=\"#/p5.Color\">p5.Color</a> ऑब्जेक्ट भी बैकग्राउंड कलर सेट करने के लिए दिया जा सकता है। ",
                "एक <a href=\"#/p5.Image\">p5.Image</a> भी पृष्ठभूमि छवि सेट करने के लिए प्रदान किया जा सकता है।"
              ],
            "params": [
                "रंग: रंग () फ़ंक्शन के साथ बनाया गया कोई भी मान",
                "संख्या: वर्तमान रंग सीमा के सापेक्ष पृष्ठभूमि की अस्पष्टता (डिफ़ॉल्ट 0-100 है)",
                "colorstring: रंग स्ट्रिंग, संभव प्रारूप: पूर्णांक आरजीबी () या आरजीबीए (), प्रतिशत आरजीबी () या आरजीबीए (), हेक्स 3 अंक, हेक्स 6 अंक",
                "संख्या: काले और सफेद के बीच एक मान निर्दिष्ट करें",
                "संख्या: लाल या ह्यू मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: हरे या संतृप्ति मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: नीला या चमक मान (वर्तमान रंग मोड के आधार पर)",
                "p5.Image: लोड छवि के साथ बनाई गई छवि () या createImage (), पृष्ठभूमि के रूप में परिभाषित की जानी चाहिए (स्केच विंडो के समान आकार होना चाहिए)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "clear": {
            "description": "Clears the pixels within a buffer. This function only clears the canvas. It will not clear objects created by createX() methods such as <a href=\"#/p5/createVideo\">createVideo()</a> or <a href=\"#/p5/createDiv\">createDiv()</a>. Unlike the main graphics context, pixels in additional graphics areas created with <a href=\"#/p5/createGraphics\">createGraphics()</a> can be entirely or partially transparent. This function clears everything to make all of the pixels 100% transparent.",
            "returns": "p5 ऑब्जेक्ट"
        },
        "colorMode": {
            "description": [
                "<a href=\"#/p5/colorMode\">colorMode()</a> p5.js रंग डेटा की व्याख्या करने के तरीके को बदल देता है। डिफ़ॉल्ट रूप से, <a href=\"#/p5/fill\">भरें()</a>, <a href=\"#/p5/stroke\">stroke()</a>, <a href=\"#/p5/background\">background()< /a>, और <a href=\"#/p5/color\">color()</a> को RGB रंग मॉडल का उपयोग करके 0 और 255 के बीच के मानों द्वारा परिभाषित किया जाता है। यह colorMode (RGB, 255) सेट करने के बराबर है कलरमोड (एचएसबी) सेट करने से आप इसके बजाय एचएसबी सिस्टम का उपयोग कर सकते हैं। डिफ़ॉल्ट रूप से, यह कलरमोड (एचएसबी, 360, 100, 100, 1) है। आप एचएसएल का भी उपयोग कर सकते हैं। ",
                "नोट: मौजूदा रंगीन ऑब्जेक्ट उस मोड को याद रखते हैं जिसमें वे बनाए गए थे, इसलिए आप उनकी उपस्थिति को प्रभावित किए बिना अपनी पसंद के अनुसार मोड बदल सकते हैं।"
              ],
            "params": [
                "लगातार: आरजीबी या एचएसबी, लाल / हरे / नीले या डाई / संतृप्ति / चमक (या चमक) के अनुरूप।",
                "संख्या: लाल या डाई रेंज, वर्तमान रंग मोड के आधार पर, या सभी मानों के लिए सीमा",
                "संख्या: हरे या संतृप्ति की सीमा, वर्तमान रंग मोड पर निर्भर करता है।",
                "संख्या: वर्तमान रंग मोड के आधार पर नीले या चमक / चमक की सीमा।",
                "संख्या: अल्फा पारदर्शिता सीमा"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "fill": {
            "description": [
                "आकृतियों को भरने के लिए प्रयुक्त रंग सेट करता है। उदाहरण के लिए, यदि आप भरण (204, 102, 0) चलाते हैं, तो भरण आदेश के बाद खींची गई सभी आकृतियों को नारंगी रंग से भर दिया जाएगा। यह रंग या तो आरजीबी के संदर्भ में निर्दिष्ट है या वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a> के आधार पर HSB रंग। (डिफ़ॉल्ट रंग स्थान RGB है, जिसमें प्रत्येक मान 0 से 255 के बीच होता है)। अल्फा डिफ़ॉल्ट रूप से सीमा भी 0 से 255 तक होती है।",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "एक p5 <a href=\"#/p5.Color\">Color</a> ऑब्जेक्ट भी भरण रंग सेट करने के लिए प्रदान किया जा सकता है।"
              ],
            "params": [
                "संख्या | व्यवस्था | स्ट्रिंग | p5.Color: ग्रे, लाल, डाई (वर्तमान रंग मोड के आधार पर), या रंग व्यवस्था, या सीएसएस रंग स्ट्रिंग का मूल्य।",
                "संख्या: हरे या संतृप्ति मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: नीला या चमक मान (वर्तमान रंग मोड के आधार पर)",
                "संख्या: पृष्ठभूमि अस्पष्टता"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "noFill": {
            "description": "ज्यामिति भरने को अक्षम करता है। अगर <a href=\"#/p5/noStroke\">noStroke()</a> और <a href=\"#/p5/noFill\">noFill()</a> दोनों को कॉल किया जाए, तो कुछ भी नहीं होगा स्क्रीन पर खींचा जा सकता है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noStroke": {
            "description": [
                "स्ट्रोक (रूपरेखा) खींचना अक्षम करता है। यदि दोनों <a href=\"#/p5/noStroke\">noStroke()</a> और <a href=\"#/p5/noFill\">noFill() </a> कहा जाता है, स्क्रीन पर कुछ भी नहीं खींचा जाएगा।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "stroke": {
            "description": [
                "आकृतियों के चारों ओर रेखाएँ और सीमाएँ खींचने के लिए उपयोग किए गए रंग को सेट करता है। यह रंग या तो RGB या HSB रंग के संदर्भ में निर्दिष्ट होता है जो वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a>पर निर्भर करता है। (डिफ़ॉल्ट रंग स्थान आरजीबी है, प्रत्येक मान 0 से 255 तक की सीमा में है। डिफ़ॉल्ट रूप से अल्फा श्रेणी भी 0 से 255 है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "स्ट्रोक रंग सेट करने के लिए एक p5 <a href=\"#/p5.Color\">Color</a> ऑब्जेक्ट भी प्रदान किया जा सकता है।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "arc": {
            "description": [
                "स्क्रीन पर एक चाप बनाएं। यदि केवल एक्स, वाई, डब्ल्यू, एच, स्टार्ट और स्टॉप के साथ बुलाया जाता है, तो चाप को एक खुले पाई सेगमेंट के रूप में खींचा और भर दिया जाएगा। यदि एक मोड पैरामीटर प्रदान किया जाता है, तो चाप भर जाएगा एक खुला अर्ध-वृत्त (OPEN), एक बंद अर्ध-वृत्त (CHORD), या एक बंद पाई खंड (PIE) के रूप में। मूल को <a href=\"#/p5/ellipseMode\">ellipseMode()</a>से बदला जा सकता है  समारोह। ",
                "चाप हमेशा दक्षिणावर्त खींची जाती है, जहां से प्रारंभ गिरती है, जहां दीर्घवृत्त पर स्टॉप गिरती है। किसी भी कोण में TWO_PI को जोड़ने या घटाने से वह नहीं बदलता जहां वे गिरते हैं। यदि दोनों प्रारंभ और स्टॉप एक ही स्थान पर गिरते हैं, तो एक पूर्ण दीर्घवृत्त खींचा जाएगा। ध्यान रखें कि y-अक्ष नीचे की दिशा में बढ़ता है, इसलिए कोणों को धनात्मक x-दिशा (\"3 बजे\") से दक्षिणावर्त मापा जाता है।"
              ],
            "params": [
                "संख्या: x दीर्घवृत्त चाप का समन्वय।",
                "संख्या: समन्वय और दीर्घवृत्त चाप।",
                "संख्या: दीर्घवृत्त चाप चौड़ाई।",
                "संख्या: दीर्घवृत्त मेहराब ऊंचाई।",
                "संख्या: दीर्घवृत्त चाप का प्रारंभिक कोण।",
                "संख्या: दीर्घवृत्त चाप का अंतिम कोण।",
                "लगातार: वैकल्पिक पैरामीटर यह निर्धारित करने के लिए कि चाप कैसे खींचना है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipse": {
            "description": [
                "स्क्रीन पर एक अंडाकार (अंडाकार) खींचता है। डिफ़ॉल्ट रूप से, पहले दो पैरामीटर अंडाकार के केंद्र का स्थान निर्धारित करते हैं, और तीसरा और चौथा पैरामीटर आकार की चौड़ाई और ऊंचाई निर्धारित करता है। यदि कोई ऊंचाई निर्दिष्ट नहीं है, तो का मान चौड़ाई का उपयोग चौड़ाई और ऊंचाई दोनों के लिए किया जाता है। यदि एक नकारात्मक ऊंचाई या चौड़ाई निर्दिष्ट की जाती है, तो निरपेक्ष मान लिया जाता है। ",
                "समान चौड़ाई और ऊंचाई वाला एक दीर्घवृत्त एक वृत्त है। मूल को <a href=\"#/p5/ellipseMode\">ellipseMode()</a> फ़ंक्शन के साथ बदला जा सकता है।"
              ],
            "params": [
                "संख्या: x दीर्घवृत्त का समन्वय।",
                "संख्या: समन्वय और दीर्घवृत्त।",
                "संख्या: दीर्घवृत्त की चौड़ाई।",
                "संख्या: दीर्घवृत्त की ऊंचाई।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "line": {
            "description": [
                "स्क्रीन पर एक रेखा (दो बिंदुओं के बीच एक सीधा पथ) खींचता है। यदि केवल 4 पैरामीटर के साथ कॉल किया जाता है, तो यह 1 पिक्सेल की डिफ़ॉल्ट चौड़ाई के साथ 2D में एक रेखा खींचेगा। इस चौड़ाई को <a href=\"#/p5/strokeWeight\"> stokeWeight()</a>का उपयोग करके संशोधित किया जा सकता है फ़ंक्शन। एक लाइन को भरा नहीं जा सकता है, इसलिए <a href=\"#/p5/fill\">fill()</a> फंक्शन होगा किसी रेखा के रंग को प्रभावित न करें। इसलिए किसी रेखा को रंगने के लिए, <a href=\"#/p5/stroke\">stroke()</a> फ़ंक्शन का उपयोग करें।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "point": {
            "description": [
                "एक बिंदु खींचता है, एक पिक्सेल के आयाम पर अंतरिक्ष में एक निर्देशांक। पहला पैरामीटर बिंदु के लिए क्षैतिज मान है, दूसरा पैरामीटर बिंदु के लिए लंबवत मान है। बिंदु का रंग <a href =\"#/p5/stoke\">stoke()</a> के साथ बदल जाता है फ़ंक्शन। बिंदु का आकार <a href=\"#/p5/strokeWeight\">strokeWeight()</a से बदला जा सकता है > समारोह।"
              ],
            "params": [
                "संख्या: x समन्वय।",
                "संख्या: समन्वय और।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "quad": {
            "description": [
                "कैनवास पर एक क्वाड खींचता है। एक क्वाड एक चतुर्भुज, एक चार भुजा वाला बहुभुज है। यह एक आयत के समान है, लेकिन इसके किनारों के बीच के कोण नब्बे डिग्री तक सीमित नहीं हैं। मापदंडों की पहली जोड़ी (x1,y1) सेट पहले शीर्ष और बाद के जोड़े को परिभाषित आकार के चारों ओर दक्षिणावर्त या वामावर्त आगे बढ़ना चाहिए। z- तर्क केवल तभी काम करते हैं जब quad() का उपयोग WEBGL मोड में किया जाता है।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।",
                "संख्या: तीसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और तीसरा बिंदु।",
                "संख्या: चौथे बिंदु का x समन्वय।",
                "संख्या: समन्वय और चौथा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rect": {
            "description": [
                "कैनवास पर एक आयत बनाता है। एक आयत एक चार-तरफा बंद आकार है जिसमें प्रत्येक कोण नब्बे डिग्री पर होता है। डिफ़ॉल्ट रूप से, पहले दो पैरामीटर ऊपरी-बाएं कोने का स्थान निर्धारित करते हैं, तीसरा चौड़ाई सेट करता है, और चौथा ऊंचाई सेट करता है। जिस तरह से इन मापदंडों की व्याख्या की जाती है, उसे <a href=\"#/p5/rectMode\">rectMode()</a> फ़ंक्शन के साथ बदला जा सकता है। ",
                "पांचवां, छठा, सातवां और आठवां पैरामीटर, यदि निर्दिष्ट किया गया है, क्रमशः शीर्ष-बाएं, शीर्ष-दाएं, निचले-दाएं और निचले-बाएं कोनों के लिए कोने त्रिज्या निर्धारित करें। एक छोड़ा गया कोने त्रिज्या पैरामीटर के मान पर सेट किया गया है पैरामीटर सूची में पहले निर्दिष्ट त्रिज्या मान।"
              ],
            "params": [
                "संख्या: आयत का x समन्वय।",
                "संख्या: समन्वय और आयत।",
                "संख्या: आयत चौड़ाई।",
                "संख्या: आयत ऊंचाई।",
                "संख्या: ऊपरी बाएं कोने में वैकल्पिक रेडियो।",
                "नंबर: ऊपरी दाएं कोने में वैकल्पिक रेडियो।",
                "नंबर: निचले दाएं कोने में वैकल्पिक रेडियो।",
                "संख्या: निचले बाएं कोने में वैकल्पिक रेडियो।",
                "संख्या:",
                "संख्या:"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "triangle": {
            "description": [
                "एक त्रिभुज को कैनवास पर खींचता है। एक त्रिभुज तीन बिंदुओं को जोड़कर बनाया गया एक विमान है। पहले दो तर्क पहले बिंदु को निर्दिष्ट करते हैं, मध्य दो तर्क दूसरे बिंदु को निर्दिष्ट करते हैं, और अंतिम दो तर्क तीसरे बिंदु को निर्दिष्ट करते हैं।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।",
                "संख्या: तीसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और तीसरा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipseMode": {
            "description": [
                "उस स्थान को संशोधित करता है जहां से दीर्घवृत्त खींचे जाते हैं, जिस तरह से पैरामीटर दिए गए हैं <a href=\"#/p5/ellipse\">ellipse()</a>, <a href=\"#/p5/circle\">circle()</a> और <a href=\" #/p5/arc\">arc()</a> की व्याख्या की जाती है। ",
                "डिफ़ॉल्ट मोड CENTER है, जिसमें पहले दो मापदंडों की व्याख्या आकृति के केंद्र बिंदु के रूप में क्रमशः x और y निर्देशांक के रूप में की जाती है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "ellipseMode(RADIUS) आकृति के केंद्र बिंदु के x और y निर्देशांक के रूप में पहले दो पैरामीटर का भी उपयोग करता है, लेकिन आकार की चौड़ाई और ऊंचाई के आधे हिस्से को निर्दिष्ट करने के लिए तीसरे और चौथे पैरामीटर का उपयोग करता है।",
                "ellipseMode(CORNER) आकृति के ऊपरी-बाएँ कोने के रूप में पहले दो मापदंडों की व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "ellipseMode(CORNERS) पहले दो मापदंडों को दीर्घवृत्त के बाउंडिंग बॉक्स के एक कोने के स्थान के रूप में और तीसरे और चौथे पैरामीटर को विपरीत कोने के स्थान के रूप में व्याख्या करता है।",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह केंद्र, त्रिज्या, कोरनर या कोरनर्स हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "noSmooth": {
            "description": [
                "सभी ज्यामिति को दांतेदार (उपनाम) किनारों के साथ खींचता है। ध्यान दें कि <a href=\"#/p5/smooth\">smooth()</a> डिफ़ॉल्ट रूप से 2D मोड में सक्रिय है, इसलिए कॉल करना आवश्यक है <a href=\"#/p5/noSmooth\">noSmooth()</a> ज्योमेट्री, इमेज और फॉण्ट की स्मूदिंग को डिसेबल करने के लिए। 3D मोड में <a href=\"#/p5/noSmooth\">noSmooth()</a> डिफ़ॉल्ट रूप से सक्षम है, इसलिए <a href=\"#/p5/smooth\">smooth()</a> को कॉल करना आवश्यक है यदि आप अपनी ज्यामिति पर चिकने (एंटीअलाइज्ड) किनारे चाहते हैं।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rectMode": {
            "description": [
                "उस स्थान को संशोधित करता है जहां से पैरामीटर दिए गए तरीके को बदलकर आयतें खींची जाती हैं <a href=\"#/p5/rect\">rect()</a> की व्याख्या की जाती है। ",
                "डिफ़ॉल्ट मोड कॉर्नर है, जो पहले दो मापदंडों को आकार के ऊपरी-बाएँ कोने के रूप में व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "रेक्टमोड (कॉर्नर) पहले दो मापदंडों को कोनों में से एक के स्थान के रूप में और तीसरे और चौथे पैरामीटर को तिरछे विपरीत कोने के स्थान के रूप में व्याख्या करता है। ध्यान दें, आयत निर्देशांक के बीच खींचा जाता है, इसलिए यह आवश्यक नहीं है कि पहला कोना ऊपरी बाएँ कोना होगा। ",
                "rectMode(CENTER) आकृति के केंद्र बिंदु के रूप में पहले दो मापदंडों की व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "rectMode(RADIUS) आकृति के केंद्र बिंदु के रूप में पहले दो मापदंडों का भी उपयोग करता है, लेकिन क्रमशः आकार की चौड़ाई और ऊंचाई के आधे हिस्से को निर्दिष्ट करने के लिए तीसरे और चौथे पैरामीटर का उपयोग करता है।",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह कॉर्नर, कोरनर्स, केंद्र या RADIUS हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "smooth": {
            "description": [
                "सभी ज्यामिति को चिकने (एंटी-अलियास) किनारों के साथ खींचता है। <a href=\"#/p5/smooth\">smooth()</a> आकार बदलने वाली छवियों की छवि गुणवत्ता में भी सुधार करेगा। ध्यान दें कि <a href=\"#/p5/smooth\">smooth()</a> डिफ़ॉल्ट रूप से 2D मोड में सक्रिय है; <a href=\"#/p5/noSmooth\">noSmooth()</a> का इस्तेमाल ज्योमेट्री, इमेज और फोंट की स्मूदिंग को डिसेबल करने के लिए किया जा सकता है। 3डी मोड में, <a href=\"#/p5/noSmooth\">noSmooth()</a> डिफ़ॉल्ट रूप से सक्षम है, इसलिए <a href=\"#/p5/smooth\">smooth()</a> को कॉल करना आवश्यक है यदि आप अपनी ज्यामिति पर चिकने (एंटीअलाइज्ड) किनारे चाहते हैं।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeCap": {
            "description": [
                "लाइन एंडिंग को रेंडर करने के लिए स्टाइल सेट करता है। ये सिरे या तो गोल, चौकोर या विस्तारित होते हैं, जिनमें से प्रत्येक को संबंधित मापदंडों के साथ निर्दिष्ट किया जाता है: ROUND, SQUARE और PROJECT। डिफ़ॉल्ट कैप राउंड है। ",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह SQUARE, PROJECT, या ROUND हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeJoin": {
            "description": [ "जोड़ों की शैली सेट करता है जो लाइन सेगमेंट को जोड़ता है। ये जोड़ या तो मिटर्ड, बेवेल या गोलाकार होते हैं और संबंधित पैरामीटर एमआईटीईआर, बेवेल और राउंड के साथ निर्दिष्ट होते हैं। डिफ़ॉल्ट संयुक्त एमआईटीईआर है। इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।" 
           ],
            "params": [
                "लगातार: यह MITER, BEVEL, या ROUND हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeWeight": {
            "description": "रेखाओं, बिंदुओं और ज्यामितीय आकृतियों के किनारों को खींचने के लिए उपयोग किए जाने वाले स्ट्रोक की चौड़ाई को परिभाषित करें। सभी चौड़ाई पिक्सेल में मापी जाती हैं।",
            "params": [
                "संख्या: पथ का भार (पिक्सेल में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezier": {
            "description": [
                "स्क्रीन पर एक क्यूबिक बेज़ियर वक्र बनाता है। इन वक्रों को एंकर और नियंत्रण बिंदुओं की एक श्रृंखला द्वारा परिभाषित किया जाता है। पहले दो पैरामीटर पहले एंकर पॉइंट को निर्दिष्ट करते हैं और अंतिम दो पैरामीटर अन्य एंकर पॉइंट को निर्दिष्ट करते हैं, जो पहले और अंतिम बिंदु बन जाते हैं। वक्र पर। मध्य पैरामीटर दो नियंत्रण बिंदुओं को निर्दिष्ट करते हैं जो वक्र के आकार को परिभाषित करते हैं। लगभग बोलते हुए, नियंत्रण बिंदु वक्र को उनकी ओर \"खींचें\"। ",
                "बेज़ियर कर्व्स फ्रांसीसी ऑटोमोटिव इंजीनियर पियरे बेज़ियर द्वारा विकसित किए गए थे, और आमतौर पर कंप्यूटर ग्राफिक्स में धीरे-धीरे ढलान वाले वक्रों को परिभाषित करने के लिए उपयोग किए जाते हैं। <a href=\"#/p5/curve\">वक्र()</a> भी देखें।"
              ],
            "params": [
                "संख्या: पहले एंकर बिंदु का x समन्वय",
                "संख्या: समन्वय और पहले लंगर बिंदु",
                "संख्या: पहला नियंत्रण बिंदु का x समन्वय",
                "संख्या: समन्वय और पहला नियंत्रण बिंदु",
                "संख्या: x दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और दूसरा नियंत्रण बिंदु",
                "संख्या: x दूसरी एंकर बिंदु का समन्वय",
                "संख्या: समन्वय और दूसरा लंगर बिंदु",
                "संख्या: पहले लंगर बिंदु का z समन्वय",
                "संख्या: z पहला नियंत्रण बिंदु का समन्वय",
                "संख्या: दूसरे एंकर बिंदु का z समन्वय",
                "संख्या: दूसरे नियंत्रण बिंदु का z समन्वय"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezierPoint": {
            "description": [
                "बेज़ियर वक्र के नियंत्रण और एंकर बिंदुओं के x या y समन्वय मानों को देखते हुए, यह स्थिति t पर बेज़ियर के x या y निर्देशांक का मूल्यांकन करता है। पैरामीटर a और d पहले और अंतिम बिंदुओं के x या y निर्देशांक हैं। वक्र पर जबकि बी और सी नियंत्रण बिंदुओं के हैं। अंतिम पैरामीटर टी परिणामी बिंदु की स्थिति है जो 0 और 1 के बीच दिया गया है। यह एक बार x निर्देशांक के साथ और दूसरी बार y निर्देशांक के साथ किया जा सकता है t पर एक बेजियर वक्र का स्थान प्राप्त करें।"
              ],
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति टी पर बेज़ियर वक्र का मूल्य"
        },
        "bezierTangent": {
            "description": [
                "ए, बी, सी, डी के लिए स्थिति टी पर बेज़ियर के स्पर्शरेखा का मूल्यांकन करता है। पैरामीटर ए और डी वक्र पर पहले और आखिरी बिंदु हैं, और बी और सी नियंत्रण बिंदु हैं। अंतिम पैरामीटर टी के बीच भिन्न होता है 0 और 1।"
              ],
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति में स्पर्शरेखा t"
        },
        "curve": {
            "description": [
                "स्क्रीन पर दो बिंदुओं के बीच एक घुमावदार रेखा खींचता है, जिसे मध्य चार मापदंडों के रूप में दिया गया है। पहले दो पैरामीटर एक नियंत्रण बिंदु हैं, जैसे कि वक्र इस बिंदु से आया है, भले ही वह खींचा न गया हो। अंतिम दो पैरामीटर समान रूप से दूसरे का वर्णन करते हैं नियंत्रण बिंदु। <br /><br /> <a href=\"#/p5/curve\">curve()</a> कार्यों की श्रृंखला को एक साथ रखकर या <a href= \"#/p5/curveVertex\">curveVertex()</a>। एक अतिरिक्त फ़ंक्शन जिसे <a href=\"#/p5/curveTightness\">curveTightness()</a> कहा जाता है, की दृश्य गुणवत्ता के लिए नियंत्रण प्रदान करता है वक्र। <a href=\"#/p5/curve\">curve()</a> फ़ंक्शन Catmull-Rom splines का कार्यान्वयन है।"
              ],
            "params": [
                "संख्या: प्रारंभिक नियंत्रण बिंदु का x समन्वय",
                "संख्या: समन्वय और प्रारंभिक चेकपॉइंट",
                "संख्या: पहले बिंदु का x समन्वय",
                "संख्या: समन्वय और पहला बिंदु",
                "संख्या: दूसरे बिंदु का x समन्वय",
                "संख्या: समन्वय और दूसरा बिंदु",
                "संख्या: x अंतिम नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और अंतिम नियंत्रण बिंदु",
                "संख्या: z प्रारंभिक नियंत्रण बिंदु का समन्वय",
                "संख्या: z पहले बिंदु का समन्वय",
                "संख्या: z दूसरे बिंदु का समन्वय",
                "संख्या: z अंतिम नियंत्रण बिंदु का समन्वय"
            ],
            "returns": "ऑब्जेक्ट: ऑब्जेक्ट पी 5"
        },
        "curveTightness": {
            "description": "<a href=\"#/p5/curve\">curve()</a> और <a href=\"#/p5/curveVertex\">curveVertex()</a के साथ बनाए गए फ़ॉर्म की गुणवत्ता को संशोधित करता है >। पैरामीटर की जकड़न यह निर्धारित करती है कि वक्र शीर्ष बिंदुओं पर कैसे फिट बैठता है। मान 0.0 जकड़न के लिए डिफ़ॉल्ट मान है (यह मान वक्र को कैटमुल-रोम स्प्लिन के रूप में परिभाषित करता है) और मान 1.0 सभी बिंदुओं को सीधी रेखाओं से जोड़ता है। मान -5.0 और 5.0 की सीमा के भीतर वक्र विकृत हो जाएंगे लेकिन उन्हें पहचानने योग्य छोड़ देंगे और जैसे-जैसे मान परिमाण में बढ़ेगा, वे विकृत होते रहेंगे।",
            "params": [
                "संख्या: मूल कोने की विकृति"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curvePoint": {
            "description": "ए, बी, सी, डी के लिए स्थिति टी पर वक्र का मूल्यांकन करता है। पैरामीटर टी 0 और 1 के बीच भिन्न होता है, ए और डी वक्र के नियंत्रण बिंदु होते हैं, और बी और सी वक्र के प्रारंभ और अंत बिंदु होते हैं। यह एक बार x निर्देशांक के साथ और दूसरी बार y निर्देशांक के साथ t पर वक्र का स्थान प्राप्त करने के लिए किया जा सकता है।",
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curveTangent": {
            "description": "ए, बी, सी, डी के लिए स्थिति टी पर वक्र के स्पर्शरेखा का मूल्यांकन करता है। पैरामीटर टी 0 और 1 के बीच भिन्न होता है, ए और डी वक्र पर बिंदु होते हैं, और बी और सी नियंत्रण बिंदु होते हैं।",
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति में स्पर्शरेखा t"
        },
        "beginContour": {
            "description": [
                "नकारात्मक बनाने के लिए <a href=\"#/p5/beginContour\">beginContour()</a> और <a href=\"#/p5/endContour\">endContour()</a> फ़ंक्शन का उपयोग करें अक्षर 'O' के केंद्र जैसे आकार के भीतर आकार। <a href=\"#/p5/beginContour\">beginContour()</a> आकृति के लिए शीर्षों को रिकॉर्ड करना शुरू करता है और <a href=\"#/ p5/endContour\">endContour()</a> रिकॉर्डिंग बंद कर देता है। ऋणात्मक आकार को परिभाषित करने वाले शीर्षों को बाहरी आकार से विपरीत दिशा में \"wind\" होना चाहिए। पहले बाहरी दक्षिणावर्त क्रम के लिए शीर्ष बनाएं, फिर आंतरिक के लिए आकृतियाँ, वामावर्त में शीर्ष आकृतियाँ बनाएँ।",
                "इन कार्यों का उपयोग केवल <a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> में किया जा सकता है। जोड़ी और रूपांतरण जैसे <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a> , और <a href=\"#/p5/scale\">scale()</a> एक <a href=\"#/p5/beginContour\">beginContour()</a>/ के भीतर काम नहीं करते हैं <a href=\"#/p5/endContour\">endContour()</a> जोड़ी। अन्य आकृतियों का उपयोग करना भी संभव नहीं है, जैसे कि <a href=\"#/p5/ellipse\">ellipse ()</a> या <a href=\"#/p5/rect\">rect()</a> भीतर।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "beginShape": {
            "description": [
                "<a href=\"#/p5/beginShape\">beginShape()</a> और <a href=\"#/p5/endShape\">endShape()</a> फ़ंक्शन का उपयोग करने से और अधिक निर्माण करने की अनुमति मिलती है जटिल रूप। <a href=\"#/p5/beginShape\">beginShape()</a> एक आकृति के लिए शीर्षों को रिकॉर्ड करना शुरू करता है और <a href=\"#/p5/endShape\">endShape()</a> a> रिकॉर्डिंग बंद कर देता है। प्रकार के पैरामीटर का मान यह बताता है कि दिए गए शीर्षों से किस प्रकार की आकृतियाँ बनानी हैं। बिना किसी विधा के निर्दिष्ट किए, आकार कोई भी अनियमित बहुभुज हो सकता है। ",
                "<a href=\"#/p5/beginShape\">beginShape()</a> के लिए उपलब्ध पैरामीटर POINTS, LINES, TRIANGLES, TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, QUAD_STRIP, और TESS (केवल WebGL) हैं। कॉल करने के बाद <a href=\"#/p5/beginShape\">beginShape()</a> फ़ंक्शन, <a href=\"#/p5/vertex\">vertex()</a> कमांड की एक श्रृंखला होनी चाहिए अनुसरण करें। आकृति बनाना बंद करने के लिए, <a href=\"#/p5/endShape\">endShape()</a> पर कॉल करें। प्रत्येक आकृति को वर्तमान स्ट्रोक रंग से रेखांकित किया जाएगा और भरण रंग से भरा जाएगा। ",
                "रूपांतरण जैसे <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a>, और < a href=\"#/p5/scale\">scale()</a> <a href=\"#/p5/beginShape\">beginShape()</a> के भीतर काम नहीं करते। यह भी नहीं है अन्य आकृतियों का उपयोग करना संभव है, जैसे कि <a href=\"#/p5/ellipse\">ellipse()</a> या <a href=\"#/p5/rect\">rect()</a > के भीतर <a href=\"#/p5/beginShape\">beginShape()</a>।"
              ],
            "params": [
                "लगातार: POINTS, LINES, TRIANGLES, TRIANGLE_FAN TRIANGLE_STRIP, QUADS, या QUAD_STRIP हो सकते हैं"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezierVertex": {
            "description": "एक बेजियर वक्र के लिए एक शीर्ष के निर्देशांक को निर्दिष्ट करता है। BezierVertex () फ़ंक्शन के लिए प्रत्येक कॉल दो नियंत्रण बिंदुओं की स्थिति और एक बेजियर वक्र के लंगर बिंदु को परिभाषित करता है, लाइन या आकृति में एक नया खंड जोड़ता है। पहली बार जब bezierVertex () का उपयोग एक startShape () कॉल के भीतर किया जाता है, तो इसे पहले एंकर बिंदु को परिभाषित करने के लिए एक वर्टेक्स () फ़ंक्शन कॉल से पहले होना चाहिए। इस फ़ंक्शन का उपयोग startShape () और endShape () के बीच किया जाना चाहिए और केवल जब MODE पैरामीटर (मोड) को StartShape () में निर्दिष्ट नहीं किया गया हो।",
            "params": [
                "संख्या: पहला नियंत्रण बिंदु के x समन्वय वक्र को इंगित करता है",
                "संख्या: समन्वय और पहला वक्र नियंत्रण बिंदु",
                "संख्या: x दूसरे नियंत्रण बिंदु वक्र का समन्वय करता है",
                "संख्या: समन्वय और दूसरा वक्र नियंत्रण बिंदु",
                "संख्या: पहले एंकर बिंदु का x समन्वय",
                "संख्या: समन्वय और पहले लंगर बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curveVertex": {
            "description": "एक वक्र के लिए एक शीर्ष के निर्देशांक निर्दिष्ट करें। यह फ़ंक्शन केवल startShape () और endShape () के बीच उपयोग किया जा सकता है और जब MODE पैरामीटर startShape () फ़ंक्शन में निर्दिष्ट नहीं होता है। वक्र की शुरुआत और अंत का मार्गदर्शन करने के लिए कर्वेरटेक्स () लाइनों की एक श्रृंखला में पहले और आखिरी बिंदुओं का उपयोग किया जाएगा। दूसरे और तीसरे बिंदु के बीच एक छोटा वक्र खींचने के लिए न्यूनतम चार बिंदुओं की आवश्यकता होती है। वक्रवेटेक्स () के साथ पांचवें बिंदु को जोड़ने से दूसरे, तीसरे और चौथे बिंदु के बीच वक्र आकर्षित होगा। कर्वेरटेक्स () फ़ंक्शन कैटमुल-रोम स्प्लिन का कार्यान्वयन है।",
            "params": [
                "संख्या: x शीर्ष का समन्वय",
                "संख्या: समन्वय और शीर्ष"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "endContour": {
            "description": "'O' अक्षर के केंद्र जैसे आंकड़ों के भीतर नकारात्मक आंकड़े बनाने के लिए startContour () और endContour () फ़ंक्शन का उपयोग करें। startContour () आकृति के लिए वर्टिस की रिकॉर्डिंग शुरू करता है और एंडकंटोर () रिकॉर्डिंग समाप्त करता है। नकारात्मक आकृति को परिभाषित करने वाले कोने बाहरी आकृति के विपरीत दिशा में परिभाषित होने चाहिए। सबसे पहले घड़ी के हाथों के क्रम में बाहरी आकृति के कोने खींचें, और फिर आंतरिक आंकड़ों के लिए, लंबवत वामावर्त ड्रा करें। ये फ़ंक्शंस केवल एक शुरुआत () / एंडशेप () जोड़ी और ट्रांसफ़ॉर्मेशन जैसे ट्रांसलेशन (), रोटेट (), और स्केल () एक स्टार्टकंटोर () / एंडकंटोर () जोड़ी के भीतर काम नहीं करते हैं। अन्य आंकड़ों, जैसे कि elupse () या rect () के अंदर का उपयोग करना भी संभव नहीं है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "endShape": {
            "description": "एंडशेप () फ़ंक्शन स्टार्टशैप () फ़ंक्शन का एक साथी है और इसे केवल स्टार्टशैप () के निष्पादन के बाद निष्पादित किया जा सकता है। जब एंडशैप () निष्पादित किया जाता है, तो पिछले कॉल से शुरू () तक परिभाषित सभी छवि डेटा छवि बफर को लिखा जाता है। CLOSE स्थिरांक का उपयोग MODE पैरामीटर के मान के रूप में किया जाता है ताकि वह आंकड़ा बंद कर सके (शुरुआत से अंत तक जुड़ने के लिए)।",
            "params": [
                "लगातार: आंकड़ा बंद करने के लिए CLOSE का उपयोग करें।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "quadraticVertex": {
            "description": "द्विघाती बेज़ियर घटता के लिए कोने के निर्देशांक निर्दिष्ट करें। प्रत्येक कॉल quadraticVertex () एक बेज़ियर वक्र के नियंत्रण और लंगर बिंदुओं में से एक की स्थिति को परिभाषित करता है, जो लाइन या आकृति में एक नया खंड जोड़ता है। पहली बार quadraticVertex () का उपयोग एक StartShape () कॉल के भीतर किया जाता है, इसे पहले एंकर बिंदु को परिभाषित करने के लिए एक वर्टेक्स () फ़ंक्शन कॉल से पहले होना चाहिए। इस फ़ंक्शन का उपयोग एक स्टार्टशैप () और एंडशेप () जोड़ी के बीच किया जाना चाहिए और केवल तब जब स्टार्टशैप () मोड पैरामीटर निर्दिष्ट नहीं किया गया हो।",
            "params": [
                "संख्या: x नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और नियंत्रण बिंदु",
                "संख्या: x एंकर बिंदु का समन्वय",
                "संख्या: समन्वय और लंगर बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "vertex": {
            "description": "सभी आंकड़े वर्टिकल की एक श्रृंखला को जोड़कर बनाए गए हैं। वर्टेक्स () बिंदुओं, रेखाओं, त्रिकोण, चतुर्भुज और बहुभुज के लिए कोने के निर्देशांक को निर्दिष्ट करने के लिए उपयोग किया जाता है। यह विशेष रूप से startShape () और endShape () फ़ंक्शन की एक जोड़ी के भीतर उपयोग किया जाता है।",
            "params": [
                "संख्या: x शीर्ष का समन्वय",
                "संख्या: समन्वय और शीर्ष"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "loadModel": {
            "description": "OBJ फ़ाइल से 3D मॉडल लोड करें। OBJ प्रारूप की सीमाओं में से एक यह है कि इसमें पैमाने की भावना शामिल नहीं है। इसका मतलब है कि विभिन्न कार्यक्रमों द्वारा निर्यात किए गए मॉडल मौलिक रूप से विभिन्न आकार हो सकते हैं। यदि आपका मॉडल प्रदर्शित नहीं किया जा रहा है, तो लोडमोड () फ़ंक्शन को सही करने के लिए सामान्यीकृत पैरामीटर के साथ कॉल करने का प्रयास करें। यह पी 5 के लिए मॉडल के आकार को एक उचित पैमाने पर ले जाएगा। आप स्केल () फ़ंक्शन के साथ अपने मॉडल के अंतिम आकार में अतिरिक्त परिवर्तन भी कर सकते हैं।",
            "params": [
                "स्ट्रिंग: लोड करने के लिए मॉडल का स्थान",
                "बूलियन: यदि सच है, लोडिंग के समय मॉडल को एक मानकीकृत आकार में स्केल करें।",
                "फ़ंक्शन (p5.Geometry3D): मॉडल लोड होने पर कहा जाने वाला फ़ंक्शन। इसे 3D ऑब्जेक्ट मॉडल में पास किया जाएगा।",
                "फ़ंक्शन (ईवेंट): ईवेंट त्रुटि के साथ कॉल करें यदि छवि लोड करने में विफल नहीं होती है।"
            ],
            "returns": "p5.Geometry3D ऑब्जेक्ट"
        },
        "model": {
            "description": "यह स्क्रीन पर एक 3D मॉडल प्रस्तुत करता है।",
            "params": [
                "p5.Geometry: 3D मॉडल को रेंडर करने के लिए लोड किया गया है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "plane": {
            "description": "पासा चौड़ाई और ऊंचाई के साथ एक विमान ड्रा।",
            "params": [
                "संख्या: विमान की चौड़ाई",
                "संख्या: विमान की ऊँचाई",
                "संख्या: आयाम x में त्रिकोणीय उपविभागों की वैकल्पिक संख्या",
                "संख्या: आयाम में त्रिकोणीय उप विभाजनों की वैकल्पिक संख्या और"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "box": {
            "description": "डाइस चौड़ाई, ऊंचाई और गहराई के साथ एक बॉक्स ड्रा करें।",
            "params": [
                "संख्या: बॉक्स चौड़ाई",
                "संख्या: बॉक्स ऊंचाई",
                "संख्या: बॉक्स की गहराई",
                "संख्या: आयाम x में त्रिकोणीय उपविभागों की वैकल्पिक संख्या",
                "संख्या: आयाम में त्रिकोणीय उप विभाजनों की वैकल्पिक संख्या और"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "sphere": {
            "description": "दिए गए त्रिज्या का एक क्षेत्र बनाएँ।",
            "params": [
                "संख्या: वृत्त त्रिज्या",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "cylinder": {
            "description": "त्रिज्या और ऊंचाई के पासे का एक सिलेंडर बनाएं।",
            "params": [
                "संख्या: सतह त्रिज्या",
                "संख्या: सिलेंडर ऊंचाई",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "cone": {
            "description": "त्रिज्या और ऊंचाई के पासे का एक शंकु बनाएं।",
            "params": [
                "संख्या: निचली सतह त्रिज्या",
                "संख्या: शंकु ऊंचाई",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipsoid": {
            "description": "किसी दिए गए त्रिज्या का एक दीर्घवृत्त ड्रा करें।",
            "params": [
                "संख्या: वृत्त त्रिज्या x",
                "संख्या: त्रिज्या और वृत्त",
                "संख्या: सर्कल त्रिज्या z",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, जितने सेगमेंट की ज्यामिति स्मूथ है, डिफॉल्ट 24 है। 150 से अधिक नंबरों से बचें जो ब्राउजर को ध्वस्त कर सकते हैं।",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, जितने सेगमेंट की ज्यामिति अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 16 है। 150 से अधिक की संख्या से बचें जो ब्राउज़र को ध्वस्त कर सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "torus": {
            "description": "त्रिज्या और दी गई ट्यूब के साथ एक टोरायड ड्रा करें।",
            "params": [
                "संख्या: पूर्ण रिंग त्रिज्या",
                "संख्या: ट्यूब त्रिज्या",
                "संख्या: सर्कल त्रिज्या z",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, ज्यामिति सेगमेंट की संख्या अधिक से अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 24 है।",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, ज्यामिति सेगमेंट की संख्या अधिक से अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 16 है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "HALF_PI": {
            "description": "HALF_PI 1.57079632679489661923 मूल्य का एक गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच का आधा अनुपात है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "PI": {
            "description": "पीआई 3.14159265358979323846 मूल्य का गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "QUARTER_PI": {
            "description": "QUARTER_PI 0.7853982 मूल्य का एक गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच के अनुपात का एक चौथाई है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "TAU": {
            "description": "टीएयू TWO_PI का एक उपनाम है, जो गणितीय मूल्य 6.28318530717958647693 है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात दोगुना है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "TWO_PI": {
            "description": "TWO_PI एक गणितीय स्थिरांक मान 6.28318530717958647693 है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात दोगुना है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "preload": {
            "description": "प्रीलोड () फ़ंक्शन को सेटअप () से पहले निष्पादित किया जाता है, इसका उपयोग बाहरी फ़ाइलों के अतुल्यकालिक लोडिंग को संभालने के लिए किया जाता है। यदि कोई प्रीलोड () फ़ंक्शन परिभाषित है, तो सेटअप () तब तक इंतजार करेगा जब तक कि फ़ंक्शन लोड करने के लिए कॉल समाप्त न हो जाएं। केवल लोड निर्देशों को प्रीलोड () में लोड किया जाना चाहिए (loadImage, loadJSON, loadFont, loadStrings, आदि)।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "setup": {
            "description": "सेटअप () फ़ंक्शन को एक बार निष्पादित किया जाता है, जब प्रोग्राम शुरू होता है। इसका उपयोग प्रारंभिक गुणों जैसे कि स्क्रीन आकार और पृष्ठभूमि के रंग को परिभाषित करने और कार्यक्रम शुरू होने पर छवियों और फोंट जैसे मीडिया को लोड करने के लिए किया जाता है। प्रत्येक कार्यक्रम में केवल एक सेटअप () फ़ंक्शन हो सकता है और इसे इसके प्रारंभिक निष्पादन के बाद नहीं बुलाया जाना चाहिए। नोट: सेटअप () के भीतर घोषित किए गए चर अन्य कार्यों जैसे कि ड्रॉ () के भीतर उपलब्ध नहीं हैं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "draw": {
            "description": "ड्रा () फ़ंक्शन को सेटअप () के बाद निष्पादित किया जाता है, और प्रोग्राम को बंद करने या noLoop () फ़ंक्शन को निष्पादित करने तक लगातार अपने ब्लॉक के भीतर कोड की पंक्तियों को निष्पादित करता है। ध्यान दें कि अगर सेटअप के भीतर नेलोप () निष्पादित किया जाता है, तो ड्रॉ () को रोकने से पहले एक बार भी निष्पादित किया जाएगा। ड्रा () फ़ंक्शन को स्वचालित रूप से निष्पादित किया जाता है और इसे कभी भी स्पष्ट रूप से निष्पादित नहीं किया जाना चाहिए। इसे हमेशा noLoop (), redraw () और loop () के साथ नियंत्रित किया जाना चाहिए। NoLoop () ड्रॉ के अंदर कोड निष्पादित करना बंद कर देता है (), redraw () ड्रा के अंदर कोड का कारण बनता है () एक बार चलाने के लिए, और पाश () ड्रॉ के अंदर कोड का कारण बनता है () से निष्पादित करना जारी रखने के लिए लगातार। जितनी बार ड्रा () प्रति सेकंड निष्पादित की जाती है उसे फ्रेमरेट () फ़ंक्शन के साथ नियंत्रित किया जा सकता है। प्रत्येक स्केच में केवल एक ड्रा () फ़ंक्शन हो सकता है, और ड्रा () केवल तभी मौजूद होना चाहिए जब आप चाहते हैं कि कोड लगातार चले, या माउसप्रेस्ड () जैसी घटनाओं को संसाधित करें। कभी-कभी, आप एक खाली ड्रा () फ़ंक्शन को निष्पादित करना चाह सकते हैं, जैसा कि ऊपर दिए गए उदाहरण में दिखाया गया है। यह ध्यान रखना महत्वपूर्ण है कि ड्रॉ () फ़ंक्शन के प्रत्येक निष्पादन की शुरुआत में ड्राइंग समन्वय प्रणाली को फिर से शुरू किया जाएगा। यदि कोई परिवर्तन ड्रा () के लिए किया जाता है (उदाहरण के लिए: स्केल, रोटेट, ट्रांसलेशन), तो इसका प्रभाव प्रत्येक ड्रा () निष्पादन की शुरुआत में रद्द कर दिया जाएगा, इसलिए परिवर्तन समय के साथ जमा नहीं होते हैं। दूसरी ओर, लागू शैली (रंग भरें, साजिश रंग) प्रभाव में रहेगी।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "remove": {
            "description": "पी 5 के स्केच को पूरी तरह से हटा दें। यह कैनवास और p5.js. द्वारा बनाए गए किसी भी अन्य तत्व को हटा देगा। यह ड्राइंग लूप को भी रोक देगा और किसी भी वैश्विक संपत्ति या विंडो की विधि को अनलिंक कर देगा। यदि आप एक नया स्केच p5 बनाना चाहते हैं तो वैरिएबल p5 को छोड़ दें। यदि आप चाहते हैं, तो आप इस चर को हटाने के लिए p5 = null को परिभाषित कर सकते हैं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noLoop": {
            "description": "ड्रॉ का निरंतर निष्पादन रोक देता है () p5.js. का कोड यदि लूप () फ़ंक्शन कहा जाता है, तो ड्रॉ () के अंदर कोड फिर से लगातार चलना शुरू हो जाता है। यदि noLoop () सेटअप के भीतर उपयोग किया जाता है (), तो यह ब्लॉक के भीतर कोड की अंतिम पंक्ति होनी चाहिए। जब noLoop () का उपयोग किया जाता है, तो फ़ंक्शन के भीतर स्क्रीन को हेरफेर या एक्सेस करना संभव नहीं होता है जो कि माउसप्रेस्ड () या कीपड्रेस () जैसी घटनाओं को संभालता है। इसके बजाय, इन फ़ंक्शंस का उपयोग रीड्रा () या लूप () को कॉल करने के लिए करें, जो ड्रॉ के निष्पादन () को स्क्रीन के सही रिफ्रेश की अनुमति देगा। इसका मतलब यह है कि जब noLoop () को निष्पादित किया गया है, तब भी इसे खींचा नहीं गया है, और saveFrame () या loadPixels () जैसे फ़ंक्शन का उपयोग नहीं किया जा सकता है। ध्यान दें कि यदि स्केच को छोटा किया गया है, तो स्केच को अपडेट करने के लिए redraw () कहा जाएगा, भले ही noLoop () निष्पादित किया गया हो। दूसरी ओर, स्केच एक विलक्षण अवस्था में प्रवेश करेगा, जब तक कि लूप () निष्पादित नहीं हो जाता।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "loop": {
            "description": "डिफ़ॉल्ट रूप से, p5.js लगातार ड्रॉ () फ़ंक्शन को दोहराता है, अपने ब्लॉक के अंदर कोड को निष्पादित करता है। हालाँकि, ड्राइंग लूप को noLoop () फ़ंक्शन को कॉल करके रोका जा सकता है। उस स्थिति में, ड्रा () लूप को लूप () के साथ वापस लिया जा सकता है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "push": {
            "description": "पुश () फ़ंक्शन वर्तमान ड्राइंग शैली सेटिंग को रिकॉर्ड करता है, और पॉप () इस सेटिंग को पुनर्स्थापित करता है। ध्यान दें कि ये फ़ंक्शन हमेशा एक साथ उपयोग किए जाते हैं। वे आपको शैली सेटिंग्स और परिवर्तनों को बदलने की अनुमति देते हैं और फिर जो आपके पास था, उसे वापस करते हैं। जब एक नया राज्य पुश () के साथ शुरू किया जाता है, तो यह वर्तमान शैली और परिवर्तन जानकारी पर बनाता है। अधिक नियंत्रण प्रदान करने के लिए पुश () और पॉप () फ़ंक्शन को एम्बेड किया जा सकता है (प्रदर्शन के लिए दूसरा उदाहरण देखें)। पुश () वर्तमान स्थिति और परिवर्तन राज्य सेटिंग्स से संबंधित जानकारी संग्रहीत करता है, जो निम्न कार्यों द्वारा नियंत्रित होता है: भरण (), स्ट्रोक (), टिंट (), स्ट्रोक वाइट (), स्ट्रोककैप (), स्ट्रोकजोन (), इमेजमोड () ), rectMode (), ellipseMode (), colorMode (), textAlign (), textFont (), textMode (), textSize (), textLeading ()।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "pop": {
            "description": "पुश () फ़ंक्शन वर्तमान ड्राइंग शैली सेटिंग को रिकॉर्ड करता है, और पॉप () इस सेटिंग को पुनर्स्थापित करता है। ध्यान दें कि ये फ़ंक्शन हमेशा एक साथ उपयोग किए जाते हैं। वे आपको शैली सेटिंग्स और परिवर्तनों को बदलने की अनुमति देते हैं और फिर जो आपके पास था, उसे वापस करते हैं। जब एक नया राज्य पुश () के साथ शुरू किया जाता है, तो यह वर्तमान शैली और परिवर्तन जानकारी पर बनाता है। अधिक नियंत्रण प्रदान करने के लिए पुश () और पॉप () फ़ंक्शन को एम्बेड किया जा सकता है (प्रदर्शन के लिए दूसरा उदाहरण देखें)। पुश () वर्तमान स्थिति और परिवर्तन राज्य सेटिंग्स से संबंधित जानकारी संग्रहीत करता है, जो निम्न कार्यों द्वारा नियंत्रित होता है: भरण (), स्ट्रोक (), टिंट (), स्ट्रोक वाइट (), स्ट्रोककैप (), स्ट्रोकजोन (), इमेजमोड () ), rectMode (), ellipseMode (), colorMode (), textAlign (), textFont (), textMode (), textSize (), textLeading ()।"
        },
        "redraw": {
            "description": "एक बार ड्रा () फ़ंक्शन के अंदर कोड निष्पादित करें। यह फ़ंक्शन प्रोग्राम को केवल आवश्यक होने पर दिखाई गई विंडो को अपडेट करने की अनुमति देता है, उदाहरण के लिए, जब माउसप्रेस्ड () या कीप्रेस्ड () द्वारा पंजीकृत एक घटना होती है। एक कार्यक्रम की संरचना में, यह केवल माउसप्रेस्ड () जैसी घटनाओं के भीतर रिड्रा () कॉल करने के लिए समझ में आता है। ऐसा इसलिए है क्योंकि redraw () तुरंत चलाने के लिए draw () नहीं करता है (यह केवल एक संकेत को परिभाषित करता है कि रिफ्रेश की आवश्यकता है)। Redraw () फ़ंक्शन सही ढंग से काम नहीं करता है जब ड्रा () फ़ंक्शन के भीतर बुलाया जाता है। एनिमेशन को सक्षम और अक्षम करने के लिए, लूप () और नेलोप () फ़ंक्शन का उपयोग करें। इसके अतिरिक्त, आप इस पद्धति के लिए प्रत्येक कॉल के लिए खींची जाने वाली संख्या को परिभाषित कर सकते हैं। इसके लिए, फ़ंक्शन में एकल पैरामीटर के रूप में एक पूर्णांक जोड़ें, जो इंगित करता है कि कितनी बार ड्राइंग की आवश्यकता है।",
            "params": [
                "पूर्णांक: एन-बार redraws। डिफ़ॉल्ट रूप से मान 1 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "frameCount": {
            "description": "फ्रेमकाउंट सिस्टम वैरिएबल में उन फ़्रेमों की संख्या होती है जिन्हें प्रोग्राम चलने के बाद से प्रदर्शित किया जाता है। सेटअप के भीतर () मान 0 है, ड्रा के पहले पुनरावृत्ति के बाद () 1 है, आदि।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "focused": {
            "description": "पुष्टि करें कि क्या p5.js प्रोग्राम की विंडो फ़ोकस में है, जिसका अर्थ है कि स्केच माउस या कीबोर्ड से प्रविष्टियाँ स्वीकार करेगा। यह चर सच्चा (सच्चा) है यदि खिड़की फोकस में है और गलत (गलत) है तो नहीं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "cursor": {
            "description": "कर्सर को डिफ़ॉल्ट प्रतीक या छवि के रूप में परिभाषित करें, या यदि यह छिपा हुआ था तो कर्सर को दृश्यमान बनाएं। यदि आप कर्सर पर एक छवि निर्दिष्ट करने का प्रयास कर रहे हैं, तो अनुशंसित आकार 16x16 या 32x32 पिक्सेल है। यदि आप अपने प्रोग्राम को वेब पर निर्यात कर रहे हैं, तो कर्सर पर एक छवि अपलोड करना संभव नहीं है, और सभी मोड सभी ब्राउज़रों के साथ काम नहीं करते हैं। पैरामीटर x और y का मान छवि के आयाम से छोटा होना चाहिए।",
            "params": [
                "नंबर | लगातार: ARROW, CROSS, हाथ, मूव, कपड़ा, या WAIT, या एक छवि का पता हो सकता है",
                "संख्या: क्षैतिज सक्रिय कर्सर बिंदु",
                "संख्या: कर्सर का ऊर्ध्वाधर सक्रिय बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "frameRate": {
            "description": "प्रति सेकंड प्रदर्शित फ़्रेमों की संख्या निर्दिष्ट करें। उदाहरण के लिए, फ्रेमरेट (30) फ़ंक्शन कॉल प्रति सेकंड 30 बार ताज़ा करने का प्रयास करेगी। यदि प्रोसेसर तेजी से निर्दिष्ट दर बनाए रखने के लिए पर्याप्त नहीं है, तो प्रति सेकंड फ्रेम दर हासिल नहीं की जाएगी। सेटअप () के भीतर प्रति सेकंड फ्रेम दर को परिभाषित करने की सिफारिश की जाती है। डिफ़ॉल्ट दर प्रति सेकंड 60 गुना है। यह setFrameRate (वैल) के समान है। बिना तर्क के फ्रेमरेट () फ़ंक्शन को कॉल करने से वर्तमान दर वापस आ जाती है। यह getFrameRate () के समान है। फ़्रेमरेट () फ़ंक्शन को उन तर्कों के साथ कॉल करना जो टाइप नंबर के नहीं हैं या सकारात्मक नहीं हैं, वे वर्तमान दर को भी वापस कर देंगे।",
            "params": [
                "संख्या: हर सेकंड दिखाए जाने वाले फ़्रेम की संख्या।"
            ],
            "returns": "वर्तमान फ्रेम दर (दूसरा फ्रेम रेट)"
        },
        "noCursor": {
            "description": "कर्सर छिपाएं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "displayWidth": {
            "description": "सिस्टम वैरिएबल जो स्क्रीन की चौड़ाई को दिखाता है। यह किसी भी स्क्रीन आयाम पर एक पूर्ण स्क्रीन प्रोग्राम चलाने के लिए उपयोग किया जाता है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "displayHeight": {
            "description": "सिस्टम वैरिएबल जो दिखाई गई स्क्रीन की ऊंचाई को स्टोर करता है। यह किसी भी स्क्रीन आयाम पर एक पूर्ण स्क्रीन प्रोग्राम चलाने के लिए उपयोग किया जाता है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowWidth": {
            "description": "सिस्टम वैरिएबल जो विंडो की आंतरिक चौड़ाई को स्टोर करता है, window.innerWidth के बराबर।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowHeight": {
            "description": "सिस्टम वैरिएबल जो विंडो की आंतरिक ऊंचाई को स्टोर करता है, window.innerHeight के बराबर।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowResized": {
            "description": "हर बार ब्राउज़र विंडो के आकार में परिवर्तन होने पर windowResized () फ़ंक्शन को कहा जाता है। यह कैनवास के आयामों को बदलने या खिड़की के नए आयामों को समायोजित करने के लिए किसी अन्य आवश्यक समायोजन करने के लिए एक अच्छी जगह है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "width": {
            "description": "सिस्टम वैरिएबल जो खींचे गए कैनवास की चौड़ाई को संग्रहीत करता है। यह मान createCanvas () फ़ंक्शन के पहले पैरामीटर द्वारा परिभाषित किया गया है। उदाहरण के लिए, फ़ंक्शन कॉल (320, 240) वैरिएबल चौड़ाई को मान 320 में परिभाषित करता है। प्रोग्राम में क्रिएकेंवस () का उपयोग नहीं किया गया है, तो चौड़ाई का डिफ़ॉल्ट मान 100 है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "height": {
            "description": "कृषि योग्य प्रणाली जो खींचे गए कैनवास की ऊंचाई को संग्रहीत करती है। यह मान createCanvas () फ़ंक्शन के पहले पैरामीटर द्वारा परिभाषित किया गया है। उदाहरण के लिए, फ़ंक्शन कॉल (320, 240) चर चौड़ाई को मान 240 में परिभाषित करता है। चौड़ाई का डिफ़ॉल्ट मान 100 है यदि createCanvas () प्रोग्राम में उपयोग नहीं किया गया है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "fullscreen": {
            "description": "यदि कोई तर्क दिया जाता है, तो यह परिभाषित करता है कि स्केच तर्क के मूल्य के आधार पर पूर्ण स्क्रीन है। यदि कोई तर्क नहीं दिया जाता है, तो वर्तमान पूर्ण स्क्रीन स्थिति वापस आ जाती है। ध्यान दें कि ब्राउज़र प्रतिबंधों के कारण इसे केवल उपयोगकर्ता से प्रविष्टि के साथ कहा जा सकता है, उदाहरण के लिए, जब माउस को उदाहरण में दबाया जाता है।",
            "params": [
                "बुलियन: परिभाषित करता है कि स्केच फुल स्क्रीन होना चाहिए या नहीं।"
            ],
            "returns": "बूलियन: वर्तमान पूर्ण स्क्रीन स्थिति"
        },
        "pixelDensity": {
            "description": "उच्च पिक्सेल घनत्व मॉनिटर के लिए पिक्सेल स्केलिंग को परिभाषित करता है। डिफ़ॉल्ट रूप से, पिक्सेल घनत्व को मॉनिटर के घनत्व से मेल खाने के लिए परिभाषित किया जाता है, पिक्सेलडेंसिटी () चलाएं ताकि यह न हो। तर्कों के बिना पिक्सेलडेंसिटी () को कॉल करना स्केच के वर्तमान पिक्सेल घनत्व को वापस करता है।",
            "params": [
                "संख्या: यदि स्केच को छोटा और कितना होना चाहिए।"
            ],
            "returns": "संख्या: स्केच का वर्तमान पिक्सेल घनत्व"
        },
        "displayDensity": {
            "description": "वर्तमान मॉनीटर का पिक्सेल घनत्व लौटाता है जिसमें स्केच चल रहा होता है।",
            "returns": "संख्या: मॉनिटर की वर्तमान पिक्सेल घनत्व"
        },
        "getURL": {
            "description": "वर्तमान URL लौटाता है।",
            "returns": "स्ट्रिंग: URL"
        },
        "getURLPath": {
            "description": "एक सरणी के रूप में URL लौटाता है",
            "returns": "फिक्स: पते के घटक"
        },
        "getURLParams": {
            "description": "ऑब्जेक्ट के रूप में वर्तमान URL के मापदंडों को लौटाता है।",
            "returns": "ऑब्जेक्ट: URL पैरामीटर"
        },
        "createCanvas": {
            "description": "दस्तावेज़ में एक कैनवास तत्व बनाएं, और पिक्सेल में इसके मापा आयामों को परिभाषित करें। यह विधि सेटअप () फ़ंक्शन की शुरुआत में केवल एक बार कॉल की जानी चाहिए। एक स्केच में एक से अधिक बार createCanvas () फ़ंक्शन को कॉल करने से अप्रत्याशित व्यवहार हो सकता है। यदि आप एक से अधिक कैनवस खींचना चाहते हैं, तो आपको createGraphics () फ़ंक्शन का उपयोग करना चाहिए (डिफ़ॉल्ट रूप से छिपा हुआ है, लेकिन इसे दिखाया जा सकता है)। चौड़ाई (चौड़ाई) और ऊँचाई (ऊँचाई) सिस्टम वैरिएबल फ़ंक्शन द्वारा दिए गए मापदंडों द्वारा परिभाषित किए गए हैं। यदि createCanvas () का उपयोग नहीं किया जाता है, तो विंडो में 100 x 100 पिक्सेल का डिफ़ॉल्ट आकार होगा। कैनवास को स्थिति के लिए और अधिक तरीकों के लिए, कैनवास स्थिति अनुभाग देखें।",
            "params": [
                "संख्या: कैनवास की चौड़ाई",
                "संख्या: कैनवास ऊंचाई",
                "लगातार: P2D या WEBGL"
            ],
            "returns": "ऑब्जेक्ट: उत्पन्न कैनवास"
        },
        "resizeCanvas": {
            "description": "दी गई चौड़ाई और ऊंचाई के लिए रेखा का आकार बदलें। कैनवास को हटा दिया जाएगा और ड्रा () फ़ंक्शन को तुरंत बुलाया जाएगा, जिससे स्केच नए कैनवास को फिट कर सके",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noCanvas": {
            "description": "P5 के स्केच के लिए डिफ़ॉल्ट कैनवास निकालें जिसमें कैनवास की आवश्यकता नहीं है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "createGraphics": {
            "description": "एक नया ऑब्जेक्ट p5.Renderer बनाएं और वापस करें। यदि आपको ग्राफिक बफर में ऑफ-स्क्रीन खींचने की आवश्यकता है तो इस वर्ग का उपयोग करें। दो पैरामीटर पिक्सल में चौड़ाई और ऊंचाई को परिभाषित करते हैं।",
            "params": [
                "संख्या: ऑफ-स्क्रीन ग्राफिक बफर चौड़ाई",
                "नंबर: ग्राफिक बफर स्क्रीन से ऊंचाई",
                "लगातार: P2D या WEBGL, यदि परिभाषित नहीं है तो डिफ़ॉल्ट रूप से P2D है"
            ],
            "returns": "स्क्रीन पर ग्राफिक बफर"
        },
        "blendMode": {
            "description": "परिभाषित मोड के अनुसार विंडो में पिक्सल को मिलाएं। दिखाए गए स्क्रीन (बी) पर पहले से मौजूद लोगों के साथ स्रोत पिक्सल (ए) को संयोजित करने के विभिन्न तरीके हैं। सभी",
            "params": [
                "लगातार: कैनवास सम्मिश्रण मोड"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "applyMatrix": {
            "description": "मापदंडों के अनुसार वर्तमान मैट्रिक्स को एक से गुणा करें। यह बहुत धीमा है क्योंकि आप परिवर्तन के व्युत्क्रम की गणना करने का प्रयास करेंगे, इसलिए जब संभव हो तो इससे बचें",
            "params": [
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "resetMatrix": {
            "description": "वर्तमान मैट्रिक्स को पहचान मैट्रिक्स के साथ बदलें",
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotate": {
            "description": "कोण पैरामीटर द्वारा निर्दिष्ट राशि के अनुसार एक आंकड़ा घुमाएं। यह फ़ंक्शन एंगल मोड () द्वारा परिभाषित कोण मोड को ध्यान में रखता है, इसलिए कोणों को रेडियन या डिग्री में दर्ज किया जा सकता है। ऑब्जेक्ट हमेशा मूल के सापेक्ष उनकी स्थिति के अनुसार घुमाए जाते हैं और सकारात्मक संख्याएं दक्षिणावर्त दिशा में घूमती हैं। परिवर्तनों को हर चीज पर लागू किया जाता है जो बाद में और बाद में फ़ंक्शन को कॉल करता है प्रभाव को जमा करता है। उदाहरण के लिए, रोटेट (HALF_PI) को कॉल करना और फिर रोटेट करना (HALF_PI) फ़ंक्शन रोटेट (PI) कॉल के बराबर है। ड्रा () फ़ंक्शन फिर से शुरू होने पर सभी परिवर्तन रद्द कर दिए जाते हैं। तकनीकी रूप से, घूर्णन () एक घूर्णन मैट्रिक्स द्वारा वर्तमान परिवर्तन मैट्रिक्स को गुणा करता है। इस फ़ंक्शन को पुश () और पॉप () फ़ंक्शन के साथ भी नियंत्रित किया जा सकता है।",
            "params": [
                "कोण: रोटेशन का कोण, रेडियन या डिग्री में निर्दिष्ट, कोण पर निर्भर करता है ()",
                "संख्या: रेडियन कोण",
                "p5.Vector | व्यवस्था: अक्ष जिस पर वह घूमता है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateX": {
            "description": "एक्स अक्ष के चारों ओर घुमाएं",
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateY": {
            "description": "Y अक्ष के चारों ओर घुमाएँ",
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateZ": {
            "description": "Z अक्ष के चारों ओर घूमता है। केवल WEBGL मोड में उपलब्ध है।",
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "scale": {
            "description": "किसी आकृति का आकार बढ़ाना या घटाना या उसके शीर्ष को संकुचित करना। ऑब्जेक्ट हमेशा समन्वय प्रणाली के सापेक्ष उनके मूल से बड़े पैमाने पर होते हैं। स्केलिंग मान दशमलव प्रतिशत हैं। उदाहरण के लिए, कॉल टू स्केल (2.0) फ़ंक्शन किसी आंकड़े का आकार 200% बढ़ाता है। फ़ंक्शन के लिए अगले और बाद में होने वाली कॉलों पर परिवर्तन सब कुछ लागू होते हैं जो प्रभाव को गुणा करते हैं। उदाहरण के लिए, कॉलिंग स्केल (2.0) और फिर स्केल (1.5) कॉलिंग स्केल (3.0) के बराबर है। यदि स्केल () फ़ंक्शन को ड्रॉ के अंदर कहा जाता है (), तो लूप फिर से शुरू होने पर परिवर्तन रद्द हो जाता है। Z पैरामीटर के साथ इस फ़ंक्शन का उपयोग केवल WEBGL मोड में उपलब्ध है। इस फ़ंक्शन को पुश () और पॉप () फ़ंक्शन के साथ भी नियंत्रित किया जा सकता है।",
            "params": [
                "नंबर | p5.Vector | व्यवस्था: ऑब्जेक्ट के पैमाने पर प्रतिशत, या एक्स तर्क पर ऑब्जेक्ट के पैमाने पर प्रतिशत अगर कई तर्क दिए जाते हैं",
                "संख्या: y अक्ष पर ऑब्जेक्ट को स्केल करने के लिए प्रतिशत",
                "संख्या: z अक्ष पर ऑब्जेक्ट को स्केल करने के लिए प्रतिशत (केवल WEBGL मोड में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "shearX": {
            "description": "कोण पैरामीटर द्वारा निर्दिष्ट राशि के अनुसार एक्स अक्ष के आसपास का आंकड़ा काटें। कोणों को वर्तमान कोण मोड कोणमोड () के अनुसार निर्दिष्ट किया जाना चाहिए। वस्तुओं को हमेशा मूल के सापेक्ष उनकी स्थिति के अनुसार काटा जाता है और सकारात्मक संख्या वस्तुओं को दक्षिणावर्त दिशा में काटती है। परिवर्तन सब कुछ पर लागू होते हैं जो एक ही फ़ंक्शन के बाद और बाद की कॉल को प्रभावित करते हैं। उदाहरण के लिए, शियरएक्स (पीआई / 2) और फिर शियरएक्स (पीआई / 2) को कॉल करना शियरएक्स (पीआई) के समान है। यदि shearX () को ड्रा () के अंदर कहा जाता है, तो लूप फिर से शुरू होने पर परिवर्तन रद्द कर दिया जाता है। तकनीकी रूप से, shearX () एक घूर्णन मैट्रिक्स द्वारा वर्तमान परिवर्तन मैट्रिक्स को गुणा करता है। फ़ंक्शन को पुश () और पॉप () फ़ंक्शन के साथ नियंत्रित किया जा सकता है।",
            "params": [
                "संख्या: रेडियन या डिग्री में निर्दिष्ट कटिंग कोण, वर्तमान कोण मोड कोण पर निर्भर करता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "shearY": {
            "description": "अक्ष के चारों ओर आकृति को काटें और कोण पैरामीटर द्वारा निर्दिष्ट राशि के अनुसार। कोणों को वर्तमान कोण मोड कोणमोड () के अनुसार निर्दिष्ट किया जाना चाहिए। वस्तुओं को हमेशा मूल के सापेक्ष उनकी स्थिति के अनुसार काटा जाता है और सकारात्मक संख्या वस्तुओं को दक्षिणावर्त दिशा में काटती है। परिवर्तन सब कुछ पर लागू होते हैं जो एक ही फ़ंक्शन के बाद और बाद की कॉल को प्रभावित करते हैं। उदाहरण के लिए, shearY (PI / 2) और फिर shearY (PI / 2) को कॉल करना shearY (PI) को कॉल करने के बराबर है। यदि कतरनी () को ड्रा के अंदर कहा जाता है (), लूप फिर से शुरू होने पर परिवर्तन रद्द कर दिया जाता है। तकनीकी रूप से, shearY () एक घूर्णन मैट्रिक्स द्वारा वर्तमान परिवर्तन मैट्रिक्स को गुणा करता है। फ़ंक्शन को पुश () और पॉप () फ़ंक्शन के साथ नियंत्रित किया जा सकता है।",
            "params": [
                "संख्या: रेडियन या डिग्री में निर्दिष्ट कटिंग कोण, वर्तमान कोण मोड कोण पर निर्भर करता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "translate": {
            "description": "दिखाए गए विंडो के भीतर वस्तुओं को स्थानांतरित करने के लिए एक मात्रा निर्दिष्ट करें। पैरामीटर x अनुवाद को बाएं से दाएं, पैरामीटर को निर्दिष्ट करता है और अनुवाद को ऊपर से नीचे तक निर्दिष्ट करता है। परिवर्तन संचयी होते हैं और एक ही फ़ंक्शन में कॉल के बाद और बाद में होने वाली हर चीज पर लागू होते हैं जो प्रभाव को जमा करते हैं। उदाहरण के लिए, कॉलिंग ट्रांसलेशन (50, 0) और फिर ट्रांसलेशन (20, 0) कॉलिंग ट्रांसलेशन (70, 0) के बराबर है। यदि अनुवाद () को ड्रॉ के अंदर कहा जाता है (), हर बार लूप फिर से शुरू होने पर परिवर्तन रद्द हो जाता है। इस फ़ंक्शन को पुश () और पॉप () फ़ंक्शन के साथ नियंत्रित किया जा सकता है।",
            "params": [
                "संख्या: बाएं-दाएं अनुवाद",
                "संख्या: ऊपर-नीचे अनुवाद",
                "संख्या: आगे-पीछे अनुवाद (केवल WEBGL मोड में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        }
	}
}
